////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  STRUCTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct PixelShaderOutput
{
	float4 Color : COLOR0;
	float4 Normal : COLOR1;
	float4 Depth : COLOR2;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  FUNCTIONS
////////////////////////////////////////////////////////////////////////////////////////////////////////////

float4 VertexShaderFunction(float2 Position : POSITION0) : SV_POSITION
{
    return float4(Position,1, 1);
}

PixelShaderOutput PixelShaderFunction() : COLOR
{
    PixelShaderOutput output;
    //black color
    output.Color = 0;
    //when transforming 0.5f into [-1,1], we will get 0.0f
    output.Normal = 0;
    //max depth
    output.Depth = 1.0f;
    return output;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  TECHNIQUES
////////////////////////////////////////////////////////////////////////////////////////////////////////////

technique Clear
{
    pass Pass1
    {
        VertexShader = compile vs_4_0 VertexShaderFunction();
        PixelShader = compile ps_4_0 PixelShaderFunction();
    }
}
